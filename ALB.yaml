AWSTemplateFormatVersion: '2010-09-09'
Description: Create EC2 instances with ALB

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id

Resources:
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: MySecurityGroup
      VpcId: !Ref VpcId #security Group created in our selected vpc.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  MyInstance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: ap-south-1a
      ImageId: ami-03bb6d83c60fc5f7c
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
      SecurityGroupIds:
        - !GetAtt MySecurityGroup.GroupId
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo apt update -y
          sudo apt install apache2 -y
          sudo ufw allow 'Apache'  
          sudo systemctl enable apache2

  MyInstance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: ap-south-1b
      ImageId: ami-03bb6d83c60fc5f7c #this is ubuntu image, ami.
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 8
      SecurityGroupIds:
        - !GetAtt MySecurityGroup.GroupId
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo apt update -y
          sudo apt install apache2 -y
          sudo ufw allow 'Apache'  
          sudo systemctl enable apache2  

  MyTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /
      TargetType: instance
      Targets:
      - Id: !Ref MyInstance1
        Port: 80
      - Id: !Ref MyInstance2
        Port: 80

  MyLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: internet-facing
      Subnets:
        - subnet-0c282a6d5e0ce9303 #subnet should be the one which contain ec2 running.
        - subnet-06cd0924941bde9aa
      SecurityGroups:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: MyLoadBalancer

  MyListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

